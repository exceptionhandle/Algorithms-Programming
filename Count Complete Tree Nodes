/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int calcLevels(TreeNode* root)
    {
        int level = 0;
        while(root) level++,root=root->left;
        return level;
    }
    
    // Total Number of Nodes in a tree = 2^^levels - 1
    // We do not subtract 1 from the Total number of nodes calculated from the left or right subtree so to also add up the current root node count .. So 2^^levels of nodes includes only one sub tree i.e., left or right and recurse to another subtree
    int countNodes(int l_level,TreeNode* root)
    {
        if(!root) return 0;
        int r_level = calcLevels(root->right);
        return (l_level == r_level)? (1<<l_level)+countNodes(l_level-1,root->right) : (1<<r_level)+countNodes(l_level-1,root->left);
    }
    int countNodes(TreeNode* root) {
        if(!root) return 0;
        return countNodes(calcLevels(root->left), root);
    }
};
