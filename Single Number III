#define offBit 0
class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {

        // find XOR of all numbers
        int xorVal = 0;
        for(int n : nums) xorVal ^= n;

        // find first set bit from right of the XOR
        int firstSetBit = -1;
        while(((xorVal>>(++firstSetBit)) & 1) == offBit);
        firstSetBit = (1<<firstSetBit);
        
        // find Numbers
        int onenum = 0;
        for_each(nums.begin(), nums.end(), [&onenum, &firstSetBit](int n){ if(n&firstSetBit) onenum ^= n; });
        return {onenum, xorVal^onenum};
    }
};
