class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        // find XOR of all numbers
        int xorVal = 0;
        for(int n : nums) xorVal ^= n;

        // find first set bit from right of the XOR
        int pos = 0;
        while(((xorVal>>(pos++)) & 1) == 0);
        pos--;
        pos = (1<<pos);

        int onenum = 0;
        for_each(nums.begin(), nums.end(), [&onenum, &pos](int n){ if(n&pos) onenum ^= n; });
        return {onenum, xorVal^onenum};
    }
};
