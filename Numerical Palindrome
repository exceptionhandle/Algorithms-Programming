Input Specifications

The first (and only) line will be a positive integer, with up to 15 digits.


Output Specifications

Print out the largest numerical palindrome that can be made from rearranging the digits in the input number. Largest refers to the greatest absolute value.


Sample Input/Output

INPUT
8989
OUTPUT
9889

#include <iostream>
#include <string>
#include <algorithm>
#include <climits> 
#include <map>
#include <vector>

using namespace std;

int main() {
    map<int, int> count;
    string num;
    cin>>num;
    while(not num.empty())
    {
        int n = num.back()-'0';
        num.pop_back();
        count[n]++;
    }
    string ans;
     int odd = -1;
        for(auto b = count.begin(); b != count.end(); b++)
        {   
            if(((*b).second%2 == 1) and ((*b).first > odd))
            {
                odd = (*b).first;
            }
        }
    while(not count.empty())
    {
     	auto b = count.crbegin();
        if((*b).second <= 1) 
        {
        	count.erase((*b).first);
        	continue;
        }
        int n = (*b).first;
        ans.insert((ans.size()/2), to_string(n) + to_string(n));
        count[(*b).first] -= 2;
        if((*b).second <= 0) count.erase((*b).first);
    }
    if(ans.empty() or ((ans.size()%2 == 0) and (odd != -1)))
        ans.insert(ans.size()/2, to_string(odd));

    
    cout<<ans<<endl;
    return 0;
}
