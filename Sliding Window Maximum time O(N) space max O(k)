class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> dq;
        vector<int> ans;
        int len = nums.size();
        if(len == 0 || k == 0) return ans;
        for(int i = 0; i < k; i++)
        {
            while(!dq.empty() && nums[dq.back()] <= nums[i])
            {
                dq.pop_back();
            }
            dq.push_back(i);
        }
        for(int i = k; i < len; i++)
        {
            ans.push_back(nums[dq.front()]);
            if(dq.front() <= i-k) dq.pop_front();
            while(!dq.empty() && nums[dq.back()] <= nums[i])
            {
                dq.pop_back();
            }
            dq.push_back(i);
        }
        ans.push_back(nums[dq.front()]);
        return ans;
    }
};
