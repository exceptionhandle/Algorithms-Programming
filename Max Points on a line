/**
 * Definition for a point.
 * struct Point {
 *     int x;
 *     int y;
 *     Point() : x(0), y(0) {}
 *     Point(int a, int b) : x(a), y(b) {}
 * };
 */
class Solution {
public:
    int maxPoints(vector<Point>& points) {
        int maximum = 0;
        for(int i = 0; i < points.size(); i++)
        {
            Point pt = points[i];
            int maxi = 0;
            int infiSlopePts = 0, samePt = 0;
            unordered_map<double, int> ptCount;
            for(int j = i + 1; j < points.size(); j++)
            {
                Point pt1 = points[j];
                if(pt.x == pt1.x)
                {
                    infiSlopePts++;
                    if(pt.y == pt1.y)
                    {
                        samePt++;
                    }
                }
                else
                {
                    double slope;
                    slope = (pt.y == pt1.y)?0.0 : (double)(pt.y - pt1.y)/(double)(pt.x - pt1.x);
                    
                    ptCount[slope]++;
                    if(maxi < ptCount[slope])
                    {
                        maxi = ptCount[slope];
                    }
                }
            }
            maxi += samePt;
            
            if(maxi < infiSlopePts)
            {
                maxi = infiSlopePts;
            }
            if(maximum < maxi)
            {
                maximum = maxi;
            }
        }
        return maximum + (not points.empty());
    }
};
