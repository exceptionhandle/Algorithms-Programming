class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int row = obstacleGrid.size();
        int col = obstacleGrid[0].size();
        if(obstacleGrid[0][0]>0) return 0;
        if(row == 1 && col == 1) return 1;
        obstacleGrid[0][0] = 1;
        if(row > 1)
        for(int i = 1; i < row; i++)
        {
            obstacleGrid[i][0] = obstacleGrid[i][0]>0?0:(obstacleGrid[i][0] + obstacleGrid[i-1][0]);
        }
        if(col > 1)
        for(int i = 1; i < col; i++)
        {
            obstacleGrid[0][i] = obstacleGrid[0][i]>0?0:(obstacleGrid[0][i] + obstacleGrid[0][i-1]);
        }
        if(row > 1 && col > 1)
        for(int i = 1; i < row; i++)
        {
            for(int j = 1; j < col; j++)
            {
                if(obstacleGrid[i][j] > 0)
                {
                    obstacleGrid[i][j] = 0;
                }
                else
                {
                    int x = obstacleGrid[i-1][j], y = obstacleGrid[i][j-1];
                    obstacleGrid[i][j] = x+y;
                }
            }
        }
        return obstacleGrid[row-1][col-1];
    }
};
